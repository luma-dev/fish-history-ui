// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/luma-dev/fish-history-ui/projects/cli/gen/models"
)

// GetTimezoneOKCode is the HTTP code returned for type GetTimezoneOK
const GetTimezoneOKCode int = 200

/*GetTimezoneOK Timezone used in server.

swagger:response getTimezoneOK
*/
type GetTimezoneOK struct {

	/*
	  In: Body
	*/
	Payload *models.TimezoneResponse `json:"body,omitempty"`
}

// NewGetTimezoneOK creates GetTimezoneOK with default headers values
func NewGetTimezoneOK() *GetTimezoneOK {

	return &GetTimezoneOK{}
}

// WithPayload adds the payload to the get timezone o k response
func (o *GetTimezoneOK) WithPayload(payload *models.TimezoneResponse) *GetTimezoneOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get timezone o k response
func (o *GetTimezoneOK) SetPayload(payload *models.TimezoneResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTimezoneOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTimezoneBadRequestCode is the HTTP code returned for type GetTimezoneBadRequest
const GetTimezoneBadRequestCode int = 400

/*GetTimezoneBadRequest Bad request.

swagger:response getTimezoneBadRequest
*/
type GetTimezoneBadRequest struct {
}

// NewGetTimezoneBadRequest creates GetTimezoneBadRequest with default headers values
func NewGetTimezoneBadRequest() *GetTimezoneBadRequest {

	return &GetTimezoneBadRequest{}
}

// WriteResponse to the client
func (o *GetTimezoneBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
