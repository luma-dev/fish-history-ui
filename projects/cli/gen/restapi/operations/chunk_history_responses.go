// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/luma-dev/fishis/projects/cli/gen/models"
)

// ChunkHistoryOKCode is the HTTP code returned for type ChunkHistoryOK
const ChunkHistoryOKCode int = 200

/*ChunkHistoryOK History blocks filtered.

swagger:response chunkHistoryOK
*/
type ChunkHistoryOK struct {

	/*
	  In: Body
	*/
	Payload *models.HistoryBlocks `json:"body,omitempty"`
}

// NewChunkHistoryOK creates ChunkHistoryOK with default headers values
func NewChunkHistoryOK() *ChunkHistoryOK {

	return &ChunkHistoryOK{}
}

// WithPayload adds the payload to the chunk history o k response
func (o *ChunkHistoryOK) WithPayload(payload *models.HistoryBlocks) *ChunkHistoryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the chunk history o k response
func (o *ChunkHistoryOK) SetPayload(payload *models.HistoryBlocks) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ChunkHistoryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ChunkHistoryBadRequestCode is the HTTP code returned for type ChunkHistoryBadRequest
const ChunkHistoryBadRequestCode int = 400

/*ChunkHistoryBadRequest Bad request.

swagger:response chunkHistoryBadRequest
*/
type ChunkHistoryBadRequest struct {
}

// NewChunkHistoryBadRequest creates ChunkHistoryBadRequest with default headers values
func NewChunkHistoryBadRequest() *ChunkHistoryBadRequest {

	return &ChunkHistoryBadRequest{}
}

// WriteResponse to the client
func (o *ChunkHistoryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
